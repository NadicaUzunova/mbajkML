name: 'Fetch and Process Data'

on:
  schedule:
    - cron: '15 * * * *' # Runs every hour at 15 minutes past the hour
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  process_data:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python 3.11.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.7

    # Step 3: Install Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[all]
          poetry install

      - name: Configure DagsHub credentials
        run: |
          dvc remote modify dagshub_remote --local auth basic
          dvc remote modify dagshub_remote --local user NadicaUzunova
          dvc remote modify dagshub_remote --local password ${{ secrets.DAGSHUB_TOKEN }}

      # Step 4: Pull DVC data
      - name: Pull DVC data
        run: dvc pull

      # Step 5: Run tests
      - name: Run tests
        run: poetry run pytest ./src/tests/

      # Step 6: Fetch data
      - name: Fetch data
        run: poetry run python ./src/data/fetch_data.py

      # Step 7: Preprocess data
      - name: Preprocess data
        run: poetry run python ./src/data/preprocess_data.py

      # Step 8: Final processing
      - name: Final processing
        run: poetry run python ./src/data/final_processing.py

      # Step 9: Commit and push changes if necessary
      - name: Commit and push if there are changes
        run: |
          git config user.email "nadica.uzunova@student.um.si"
          git config user.name "NadicaUzunova"
          git add .
          git commit -m "Update data" || echo "No changes to commit"
          git push

      # Step 10: Push DVC changes
      - name: Push DVC changes
        run: dvc push
