name: Deploy Application

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
  workflow_dispatch:

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-root

      - name: Run tests
        run: poetry run pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Docker Image
        run: docker build -t mbajk-backend -f Dockerfile .

      - name: Build Frontend Docker Image
        run: docker build -t mbajk-frontend -f src/client/Dockerfile ./src/client

  push_to_dockerhub:
    runs-on: ubuntu-latest
    needs: test_and_build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Push Backend Image
        run: |
          docker tag mbajk-backend ${{ secrets.DOCKERHUB_USERNAME }}/mbajk-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mbajk-backend:latest

      - name: Push Frontend Image
        run: |
          docker tag mbajk-frontend ${{ secrets.DOCKERHUB_USERNAME }}/mbajk-frontend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mbajk-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_dockerhub
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST "https://api.render.com/deploy/${{ secrets.RENDER_API_KEY }}"
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_API_KEY }}